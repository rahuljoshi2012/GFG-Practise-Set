class Solution {
    static long minTime(int[] arr, int n, int k) {
        long low = 0;
        long high = 0;
        for (int i = 0; i < n; i++) {
            low = Math.max(low, arr[i]);
            high += arr[i];
        }
        while (low < high) {
            long mid = low + (high - low) / 2;
            if (isValid(arr, n, k, mid)) {
                high = mid;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }
    static boolean isValid(int[] arr, int n, int k, long time) {
        int painters = 1;
        long currTime = 0;
        for (int i = 0; i < n; i++) {
            currTime += arr[i];
            if (currTime > time) {
                painters++;
                currTime = arr[i];
            }
        }
        return painters <= k;
    }
}
