class Solution
{

	public int minDifference(int arr[], int n) 
	{ 
	    int totalSum = 0;
	    for(int i = 0 ; i<n ; i++){
	        totalSum += arr[i];
	    }
	    
	    boolean dp[][] = new boolean[n][totalSum + 1];
	    
	    for(int i = 0 ; i<n ; i++) dp[i][0] = true;
	    
	    if(arr[0] <= totalSum) dp[0][arr[0]] = true;
	    
	    for(int i = 1 ; i<n ; i++){
	        for(int target = 1 ; target <= totalSum ; target++){
	            
	            boolean notTake = dp[i-1][target];
	            boolean take = false;
	            if(arr[i] <= target) take = dp[i-1][target - arr[i]];
	            
	            dp[i][target] = (notTake || take);
	        }
	    }
	    
	    int ans = (int)(1e9);
	    
	    for(int i = 0 ; i<= totalSum/2 ; i++){
	        if(dp[n-1][i] == true){
	            
	            ans = Math.min(ans , Math.abs((totalSum - i) - i));
	        }
	    }
	    return ans;
	} 
}
