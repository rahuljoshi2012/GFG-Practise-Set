class Solution{
    // A1[] : the input array-1
    // N : size of the array A1[]
    // A2[] : the input array-2
    // M : size of the array A2[]
    
    //Function to sort an array according to the other array.
    public static int[] sortA1ByA2(int A1[], int N, int A2[], int M)
    {
        int[] res=new int[N];
        int index=0;
        ArrayList<Integer> remaining=new ArrayList<Integer>();
        HashMap<Integer,Integer> h=new HashMap<Integer,Integer>();
        for(int i=0;i<N;i++){
            if(h.containsKey(A1[i])){
                h.put(A1[i],h.get(A1[i])+1);
            }
            else{
                h.put(A1[i],0);
            }
        }
        for(int j=0;j<M;j++){
            if(h.containsKey(A2[j])){
                for(int k=0;k<=h.get(A2[j]);k++){
                    res[index]=A2[j];
                    index++;
                }
                h.remove(A2[j]);
            }
        }
        for(int i=0;i<N;i++){
            if(h.containsKey(A1[i])){
                if(h.get(A1[i])!=0){
                    remaining.add(A1[i]);
                    h.put(A1[i],h.get(A1[i])-1);
                }
                else{
                    remaining.add(A1[i]);
                    h.remove(A1[i]);
                }
            }
        }
        Collections.sort(remaining);
        int x=0;
        while(index<N){
            res[index]=remaining.get(x);
            x++;
            index++;
        }
        return res;
    }
}
